#!/usr/bin/env bash


BASE_DIR="$(/usr/local/eminfo/eminfo basedir)"
[ -f "${BASE_DIR}/bin/include" -a -s "${BASE_DIR}/bin/include" ] && {
        source ${BASE_DIR}/bin/include 2>&-
}

MODE=0
[ "$1" == "data" -o "$1" == "d" ] && MODE=1


# Return Codes
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
STATE_NOOP=4

# Set Default
EXIT_STATUS=0
LEVEL=    	### { ok | warn | crit | unknown }
TYPE=    	### { str| file }
CONTENT=        ### { strings | /path/to/result.file }

# Read plugin config value here
addr_port=$( read_eminfo_config pop_svr addr_port )
time_out=$( read_eminfo_config pop_svr time_out )

# if null return STATE_UNKNOWN.

# if null or invalid set default.
[ -z "${addr_port}" ] && addr_port="127.0.0.1:110"
[ -z "${time_out}" -o ! -z "${time_out//[0-9]}" ] && time_out=3

# check function here
check(){
  [ -f "/usr/bin/nc" -a -x "/usr/bin/nc" ] || {
        EXIT_STATUS=${STATE_UNKNOWN};
        LEVEL="unknown";
        TYPE="str";
        CONTENT="utilite [/usr/bin/nc] not prepared."
        return
  }

  local total=  err_num=0  result=
  for x in `echo "${addr_port}"`;
  do
	local addr=  port=  str1=  str2=
	addr=$(echo "${x}" | awk -F: '{print $1}')
	port=$(echo "${x}" | awk -F: '{print $NF}')
  	str1=$( (echo -e "quit\n") | /usr/bin/nc -w ${time_out} ${addr} ${port} 2>&1 |head -n1 )
  	str2=$( echo -e "${str1}" | grep -E -i -o "ok|ready|start|running|pop3|mua" )
	# output data and exit if MODE=1
	[ "${MODE}" == "1" ] && {
		echo "${addr}:${port} ${str1}"
		continue
	}
  	if [ -n "${str2}" ]; then
		result=" ${result} check [${x}] return [${str1}] ### "
  	else
		((err_num++))
		result=" ${result} $(html_red "check [${x}] return [${str1}]") ### "
  	fi
	((total++))
  done

  # exit if MODE=1
  [ "${MODE}" == "1" ] && exit

  [ "${err_num}" == "0" ] && {
	EXIT_STATUS=${STATE_OK};
	LEVEL="ok";
	TYPE="str";
	CONTENT="POP SVR OK | ${total}/${total} pop3 check succeed | "${result}" "
  } || {
	EXIT_STATUS=${STATE_CRITICAL};
	LEVEL="crit";
	TYPE="str";
	CONTENT="POP SVR CRITICAL | ${err_num}/${total} pop3 check failed | "${result}" "
  }
}

check

# output result and return exit status here.
echo "{"${LEVEL}"}:{"${TYPE}"}:{"${CONTENT}"}"  | tr -d '\015\012'
exit ${EXIT_STATUS}
